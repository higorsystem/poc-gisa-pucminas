server {
    listen       443 ssl http2;
    server_name  sistema.gisa.com;

    ssl_certificate /cert/sistema.gisa.com.crt;
    ssl_certificate_key /cert/sistema.gisa.com.key;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # Set caches, protocols, and accepted ciphers. This config will merit an A+ SSL Labs score as of Sept 2015.
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5';

    location = /api/v1/authentication {
        #WebApi
        proxy_pass http://gisa_authentication:2311/;

        proxy_redirect off;
        proxy_buffering on;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        proxy_set_header Host $host;
    }

    location = /auth {
        #WebApi
        proxy_pass http://gisa_authentication:2311/health;

        proxy_redirect off;
        proxy_buffering on;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        proxy_set_header Host $host;
    }

    # Coreografo.
    location = /api/v1/choreographer {
        #WebApi
        proxy_pass http://gisa_choreographer:7000/;

        proxy_redirect off;
        proxy_buffering on;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        proxy_set_header Host $host;
    }

    location = /mic {
        #WebApi
        proxy_pass http://gisa_micapi:5001/;

        proxy_redirect off;
        proxy_buffering on;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        proxy_set_header Host $host;
    }		

    # Verificar se o endpoint esta no ar.
    location = /scheduler {
        #WebApi
        proxy_pass http://gisa_consultschedulerapi:6000/;

        proxy_redirect off;
        proxy_buffering on;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        proxy_set_header Host $host;
    }

    location = /bypass {
        #WebApi
        proxy_pass http://gisa_consultschedulerapi:6000/;

        add_header Access-Control-Allow-Origin *;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

